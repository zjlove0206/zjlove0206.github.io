[{"title":"AdminLte后台UI框架","date":"2017-05-07T15:21:48.000Z","path":"2017/05/07/AdminLte后台UI框架/","text":"AdminLTE – 非常流行的基于 Bootstrap 3.x 的免费的后台UI框架 框架推荐基于AdminLTE进行后台功能快速开发。并为此专门做一些规范改进。 增加快捷部署的模块 整合ionicons awesome 字体 默认dist（字体、皮肤），整合以后目录为public/assets_default/admin-lte 对应的 css\\img\\js。详情查看 AdminLte下的Gruntfile.js [TOC] 安装配置环境配置123456789101112131415161718192021222324252627一、在前端模块目录下 默认：frontend/defaultnpm install git+ssh://git@git.*/AdminLTE.git --save二、配置 gulpfile.js增加以下 代码片段var adminlte_assets = '../../public/assets_default/admin-lte';var gulp = require('gulp');var adminlte = require('admin-lte');gulp.task('adminlte',function()&#123; adminlte.install(adminlte_assets);&#125;);三、然后运行gulp 在public下生成模板gulp adminltePS：如果未安装 gulp\\gulp-less 运行 npm install gulp 进行安装参考 tpl/index2.html 例子开始吧 引用方式 配置config/prod.php 配置builtInTool 123456789101112131415161718192021$config['builtInTool'] = [ 'runtimeDir' =&gt; [ 'runtime/logs', 'runtime/smarty' ], // 是否引入前端模板 （跟进需求定） 'frontend' =&gt; [ 'admin', //后台 //'default', //前台 ], 'publishPath' =&gt; [ 'app/', 'bin/', 'frontend/default/tpl/', 'public/', 'runtime/', 'vendor/', 'composer.*', ], ]; 目录结构 frontend 目录结构 123456789101112131415161718192021222324252627文件层次结构|~node_modules/ | |~admin-lte/| | |+bootstrap/ | | |+build/ # 打包目录| | |~dist/ # 样式目录| | | |~css/ | | | | |+skins/ # 系统皮肤| | | | |-AdminLTE.css | | | | `-AdminLTE.min.c| | | |+img/| | | `~js/ | | | |+pages/ | | | |-app.js | | | |-app.min.js | | | `-demo.js | | |+documentation/ # 简介| | |+font-awesome/ # 集成字体| | |+ionicons/ # icon | | |+pages/ | | |+plugins/ # 插件 如：表格、时间| | |+tpl/ | | |-bower.json | | |-changelog | | |-composer.json # 包管理配置| | |-Gruntfile.js # gulp 配置 public 目录结构 12345678910111213141516|~assets_admin/ | |~admin-lte/ | | |+bootstrap/ | | |~css/ # 适应mx2目录，来源于dist | | | |+skins/ | | | |-AdminLTE.css | | | `-AdminLTE.min.css | | |+font-awesome/ | | |+img/ | | |+ionicons/ | | |~js/ | | | |+pages/ | | | |-app.js | | | |-app.min.js | | | `-demo.js | | `+plugins/ 代码结构Demo 结构123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=\"utf-8\"&gt; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt; &lt;title&gt;AdminLTE 2 | Demo 结构&lt;/title&gt; &lt;!--浏览器响应屏幕宽度--&gt; &lt;meta content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\" name=\"viewport\"&gt; &lt;!--Bootstrap 3.3.6 基于bootstrap 3.X版本--&gt; &lt;link rel=\"stylesheet\" href=\"bootstrap/css/bootstrap.min.css\"&gt; &lt;!--Font Awesome CDN 字体样式--&gt; &lt;link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.5.0/css/font-awesome.min.css\"&gt; &lt;!--Ionicons CDN icon图片样式--&gt; &lt;link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/ionicons/2.0.1/css/ionicons.min.css\"&gt; &lt;!--Theme style|构架主题，主结构--&gt; &lt;link rel=\"stylesheet\" href=\"dist/css/AdminLTE.min.css\"&gt; &lt;!--AdminLTE Skins. 后台皮肤，可自定义选择：PS：css换后，其他的div也要更换--&gt; &lt;link rel=\"stylesheet\" href=\"dist/css/skins/_all-skins.min.css\"&gt; &lt;!--下面是一些 插件的引入：如时间插件、文本编辑器等--&gt; &lt;!--iCheck--&gt; &lt;link rel=\"stylesheet\" href=\"plugins/iCheck/flat/blue.css\"&gt; &lt;!--Morris chart--&gt; &lt;link rel=\"stylesheet\" href=\"plugins/morris/morris.css\"&gt; &lt;!--jvectormap--&gt; &lt;link rel=\"stylesheet\" href=\"plugins/jvectormap/jquery-jvectormap-1.2.2.css\"&gt; &lt;!--Date Picker--&gt; &lt;link rel=\"stylesheet\" href=\"plugins/datepicker/datepicker3.css\"&gt; &lt;!--Daterange picker--&gt; &lt;link rel=\"stylesheet\" href=\"plugins/daterangepicker/daterangepicker-bs3.css\"&gt; &lt;!--bootstrap wysihtml5 - text editor--&gt; &lt;link rel=\"stylesheet\" href=\"plugins/bootstrap-wysihtml5/bootstrap3-wysihtml5.min.css\"&gt; &lt;!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries--&gt; &lt;!--WARNING: Respond.js does not work if you view the page via file:--&gt; &lt;!--[if lt IE 9]&gt; &lt;script src=\"https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js\"&gt;&lt;/script&gt; &lt;script src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"&gt;&lt;/script&gt; &lt;![endif]--&gt;&lt;/head&gt;&lt;!--skin色值定义色调--&gt;&lt;body class=\"hold-transition skin-blue sidebar-mini\"&gt;&lt;!--包装器：布局wrapper div包含整个site--&gt;&lt;div class=\"wrapper\"&gt; &lt;!--主头：布局 main-header 包含logo以及导航栏--&gt; &lt;header class=\"main-header\"&gt; &lt;/header&gt; &lt;!--侧边栏包装：左侧菜单栏&amp;用户板块--&gt; &lt;aside class=\"main-sidebar\"&gt; &lt;/aside&gt; &lt;!--内容包装器：包含面包屑&amp;内容体 --&gt; &lt;div class=\"content-wrapper\"&gt; &lt;/div&gt; &lt;!--页脚--&gt; &lt;footer class=\"main-footer\"&gt; &lt;/footer&gt; &lt;!--控制栏 右侧设置--&gt; &lt;aside class=\"control-sidebar control-sidebar-dark\"&gt; &lt;/aside&gt; &lt;!--控制栏背景设置，放到控制栏后面--&gt; &lt;div class=\"control-sidebar-bg\"&gt;&lt;/div&gt;&lt;/div&gt;&lt;!-- ./wrapper --&gt;&lt;!--JS组件引入--&gt;&lt;script src=\"plugins/jQuery/jQuery-2.2.0.min.js\"&gt;&lt;/script&gt;&lt;!-- jQuery UI 1.11.4 --&gt;&lt;script src=\"https://code.jquery.com/ui/1.11.4/jquery-ui.min.js\"&gt;&lt;/script&gt;&lt;!-- Resolve conflict in jQuery UI tooltip with Bootstrap tooltip --&gt;&lt;script&gt; $.widget.bridge('uibutton', $.ui.button);&lt;/script&gt;&lt;!-- Bootstrap 3.3.6 --&gt;&lt;script src=\"bootstrap/js/bootstrap.min.js\"&gt;&lt;/script&gt;&lt;!-- Morris.js charts --&gt;&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js\"&gt;&lt;/script&gt;&lt;script src=\"plugins/morris/morris.min.js\"&gt;&lt;/script&gt;&lt;!-- Sparkline --&gt;&lt;script src=\"plugins/sparkline/jquery.sparkline.min.js\"&gt;&lt;/script&gt;&lt;!-- jvectormap --&gt;&lt;script src=\"plugins/jvectormap/jquery-jvectormap-1.2.2.min.js\"&gt;&lt;/script&gt;&lt;script src=\"plugins/jvectormap/jquery-jvectormap-world-mill-en.js\"&gt;&lt;/script&gt;&lt;!-- jQuery Knob Chart --&gt;&lt;script src=\"plugins/knob/jquery.knob.js\"&gt;&lt;/script&gt;&lt;!-- daterangepicker --&gt;&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.11.2/moment.min.js\"&gt;&lt;/script&gt;&lt;script src=\"plugins/daterangepicker/daterangepicker.js\"&gt;&lt;/script&gt;&lt;!-- datepicker --&gt;&lt;script src=\"plugins/datepicker/bootstrap-datepicker.js\"&gt;&lt;/script&gt;&lt;!-- Bootstrap WYSIHTML5 --&gt;&lt;script src=\"plugins/bootstrap-wysihtml5/bootstrap3-wysihtml5.all.min.js\"&gt;&lt;/script&gt;&lt;!-- Slimscroll --&gt;&lt;script src=\"plugins/slimScroll/jquery.slimscroll.min.js\"&gt;&lt;/script&gt;&lt;!-- FastClick --&gt;&lt;script src=\"plugins/fastclick/fastclick.js\"&gt;&lt;/script&gt;&lt;!-- AdminLTE App --&gt;&lt;script src=\"dist/js/app.min.js\"&gt;&lt;/script&gt;&lt;!-- AdminLTE dashboard demo (This is only for demo purposes) --&gt;&lt;script src=\"dist/js/pages/dashboard.js\"&gt;&lt;/script&gt;&lt;!-- AdminLTE for demo purposes --&gt;&lt;script src=\"dist/js/demo.js\"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 代码抽离结构1234567891011121314151617181920212223242526272829303132333435363738394041# Inc 目录设计# adminLte 抽离 不用抽离的太细，否则显得异常乱inc\\header.html # 主资源引入 head 头配置 css\\jsinc\\footer.html # 末位资源引入 js inc\\topbar.html # 页面主头设置 logo、导航栏目inc\\menu.html # 左侧菜单栏inc\\copyright.html # 版权声明# 公共抽离inc\\fault\\404.html # 404 未找到错误提示页面inc\\fault\\400.html # 400 无权操作页面提示inc\\common\\showMessage.html # 公共弹窗&amp;信息提示# mx2 html组合呈现&lt;!--里面包含 layout初始 wrapper必须包含所有div--&gt;&lt;&#123;include file=\"inc/header.html\"&#125;&gt;&lt;!--header 头部--&gt;&lt;&#123;include file=\"inc/topbar.html\"&#125;&gt;&lt;!--菜单整体一行--&gt;&lt;&#123;include file=\"inc/menu.html\"&#125;&gt;&lt;!--正式内容开始--&gt;&lt;div class=\"content-wrapper\"&gt; &lt;!-- Content Header (Page header) --&gt; &lt;section class=\"content-header\"&gt; &lt;h1&gt; 欢迎登陆运营平台 &lt;small&gt;Justin赵小贱&lt;/small&gt; &lt;/h1&gt; &lt;ol class=\"breadcrumb\"&gt; &lt;li&gt;&lt;a href=\"#\"&gt;&lt;i class=\"fa fa-dashboard\"&gt;&lt;/i&gt; Home&lt;/a&gt;&lt;/li&gt; &lt;li class=\"active\"&gt;Dashboard&lt;/li&gt; &lt;/ol&gt; &lt;/section&gt;&lt;/div&gt;&lt;!--正式内容结束--&gt;&lt;&#123;include file=\"inc/footer.html\"&#125;&gt; 常用123456789101112131415161718192021222324252627282930### layout 布局.wrapper # div,包含所有 .main-header # header,包括logo和navbar .main-sidebar # aside,sidebar菜单 .content-wrapper # div,主体### widgets 小部件- box- info-box- small-box &amp;chat 等等### UI Elements- icon- calendar 等### 模态框 弹窗等（PS：同bootstrap）[js组件](http://v3.bootcss.com/javascript/)# 后续补充。。。### 分页- ajax 分页- smarty 分页### PS：adminLte自带的 dataTable 分页，只能支撑小数据量。建议封装公共","categories":[{"name":"公共模板","slug":"公共模板","permalink":"https://zjlove0206.github.io/categories/公共模板/"}],"tags":[{"name":"bootstrap","slug":"bootstrap","permalink":"https://zjlove0206.github.io/tags/bootstrap/"},{"name":"UI模板","slug":"UI模板","permalink":"https://zjlove0206.github.io/tags/UI模板/"}]},{"title":"NSQ初探","date":"2017-05-07T15:17:24.000Z","path":"2017/05/07/NSQ初探/","text":"NSQ 是一个实时的分布式消息平台。它的设计目标是为在多台计算机上运行的松散服务提供一个现代化的基础设施骨架。它基于go语言的NSQ的内部架构，它能够为高吞吐量的网络服务器带来性能的优化，稳定性和鲁棒性。 概要 NSQ是由四个重要组件构成： nsqd：一个负责接收、排队、转发消息到客户端的守护进程 nsqlookupd：管理拓扑信息并提供最终一致性的发现服务的守护进程 nsqadmin：一套Web用户界面，可实时查看集群的统计数据和执行各种各样的管理任务 utilities：常见基础功能、数据流处理工具，如nsq_stat、nsq_tail、nsq_to_file、nsq_to_http、nsq_to_nsq、to_nsq 构成 nsq的设计构成 topic 一个可供订阅的话题。流数据 stream channel 属于topic的下一级，一个topic可以有多个channel PS：一个nsqd可以包含多个订阅（topics），每个订阅可以有多个channels。并且所有的channels拿到的都是topic的全部副本。nsq会做负载均衡 对外支持 Tcp/IP 传输协议 Http 应用层协议 原理图 Alt text PS：更多有深入的内容，敬请期待~","categories":[{"name":"消息队列","slug":"消息队列","permalink":"https://zjlove0206.github.io/categories/消息队列/"}],"tags":[{"name":"NSQ","slug":"NSQ","permalink":"https://zjlove0206.github.io/tags/NSQ/"},{"name":"消息队列","slug":"消息队列","permalink":"https://zjlove0206.github.io/tags/消息队列/"}]},{"title":"Hexo搭建博客","date":"2017-05-07T10:44:03.000Z","path":"2017/05/07/Hexo搭建博客/","text":"Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 安装前提 1、必须检查是否安装 node.js&amp;git 2、以MAC为例子，介绍安装 node.js&amp;git git : brew install git node.js : 最佳使用nvm安装 curl方式： curl https://raw.github.com/creationix/nvm/master/install.sh | sh wget方式： wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh nvm install stable 3、如果有2者，直接 npm install -g hexo-cli npm可以加载node_modules依赖 建立本地站点初始化 init hexo目录 123$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install 站点目录以及介绍 12345678910|--- .deploy_git # 发布git的目录---- .gitignore # git 忽略提交---- _config.yml # yaml 配置文件 站点网址、url、插件等---- db.json # 发布的数据库|--- node_modules # hexo npm插件等---- package.json # hexo 包信息|--- public # hexo generate 发版生成的public文件|--- scaffolds # 模板文件夹|--- source # 资源文件夹|--- themes # 主题文件夹 我的config.yml配置 # ＿＿＿ # 彡 _／ ⌒ ⌒ 你说神马~ # /)) (●) (●) ヽ # ｜∩ (_人_) | # / ノ､＿ヽノ＿ノ￣) # / / /ﾌ_/ # L＿／＼ ＼( # # 你很帅，贱贱 # Hexo Configuration # Docs: https://hexo.io/docs/configuration.html # Source: https://github.com/hexojs/hexo/ # 搭建自己的blog网站 配置中心 # 网站 (site) title、子标题、描述、作者、编码语言、时区 title: 每日一学 subtitle: 学而不思则罔，思而不学则殆 description: 后端程序狗 author: Justin赵小贱 language: zh-CN timezone: # 网址 (URL) blog地址 发布网址 默认localhost:4000 # 子目录介绍：设置 url: &apos;http://yoursite.com/child&apos; and root: &apos;/child/&apos; url: https://zjlove0206.github.io/ root: / permalink: :year/:month/:day/:title/ permalink_defaults: # 目录 (Directory) source_dir: source public_dir: public tag_dir: tags archive_dir: archives category_dir: categories code_dir: downloads/code i18n_dir: :lang skip_render: # 文章内容(Writing) new_post_name: :title.md # File name of new posts default_layout: post titlecase: false # Transform title into titlecase external_link: true # Open external links in new tab filename_case: 0 render_drafts: false post_asset_folder: false relative_link: false future: true highlight: enable: true line_number: true auto_detect: false tab_replace: # Category &amp; Tag default_category: uncategorized category_map: tag_map: # Date / Time format ## Hexo uses Moment.js to parse and display date ## You can customize the date format as defined in ## http://momentjs.com/docs/#/displaying/format/ date_format: YYYY-MM-DD time_format: HH:mm:ss # 分页 per_page: 10 # limit 0 表示关闭分页功能 pagination_dir: page # 扩展（Extensions）插件&amp;主题 ## Plugins: https://hexo.io/plugins/ ## Themes: https://hexo.io/themes/ theme: landscape # 部署（Deployment） git 部署 ## Docs: https://hexo.io/docs/deployment.html deploy: type: git repo: https://github.com/zjlove0206/zjlove0206.github.io branch: master # 插件 plugins: hexo-generator-feed hexo-generator-baidu-sitemap # 百度地图sitemap baidusitemap: path: baidusitemap.xml #index_generator: # per_page: 10 ##首页默认10篇文章标题，如果值为0不分页 #archive_generator: # per_page: 10 ##归档页面默认10篇文章标题，如果值为0不分页 # yearly: true ##生成年视图 # monthly: true ##生成月视图 #tag_generator: # per_page: 10 ##标签页面默认10篇文章，如果值为0不分页 #category_generator: # per_page: 10 ##分类页面默认10篇文章，如果值为0不分页 常用插件推荐官网插件推荐官网主题推荐不错的总结 常用命令123456789101112# 初始化博客项目$ hexo init &lt;folder&gt; # 新建博客内容 layout ：page \\ post \\ draft$ hexo new [layout] &lt;title&gt;# 生成public静态文件 参数 -d (生成后立刻部署) -w (监控变动文件)$ hexo generate # 启动server预览 参数 -p (端口，默认4000) -i 指定ip$ hexo server# 发布部署 必须先生成public文件然后部署$ hexo deploy# 清除db.json&amp;public$ hexo clean 发布部署 支持多个节点 同步git前戏： 搭建git项目 独立域名自己购买按步骤搞即可 hexo 同步部署 git关键点 1234deploy: type: git repo: https://github.com/zjlove0206/zjlove0206.github.io branch: master 步骤： 1、先 hexo g 2、后 hexo d 各个命令的缩写 1、hexo g === hexo generate 2、hexo s === hexo server 3、hexo d === hexo deploy 更换主题 indigo PS：换主题，重新hexo clean ，多注意github上的wiki","categories":[{"name":"基础应用","slug":"基础应用","permalink":"https://zjlove0206.github.io/categories/基础应用/"}],"tags":[]},{"title":"Tmux安装与使用","date":"2017-05-07T10:39:38.000Z","path":"2017/05/07/Tmux安装与使用/","text":"什么是TMUX？Tmux 是一个工具，用于在一个终端窗口中运行多个终端会话。不仅如此，你还可以通过 Tmux 使终端会话运行于后台或是按需接入、断开会话，这个功能非常实用。 安装 Mac OS 第一步 安装 homebrew 包管理工具 第二步 brew install tmux 功能 单元模块 含义 功能 Server 服务器 输入tmux命令时就开启了一个服务器 Session 会话 每一个服务器都会包含多一个会话 c+b s Window 窗口 一个会话可以包含多个窗口 Pane 面板 每一个窗口可以包含多个面板 习惯配置vim ~/.tmux.conf 高效命令 显示所有会话 tmux ls 创建会话 Session tmux new -s 会话名 (如果没有 -s 默认按照阿拉伯数字来建立) -c 默认访问的server目录（-c start-directory） -n 开启Windows的名字 （-n window-name） -s 会话的名字（-s session-name） 连接会话 tmux a -t 会话名 断开、离开会话 tmux detach 或者 ctrl+b d 关闭会话 tmux kill-session -t 会话名 (PS: -a 为all删除) 关闭窗口 kill-window 学习文档[窗口，session] 层次结构 Alt text","categories":[{"name":"基础应用","slug":"基础应用","permalink":"https://zjlove0206.github.io/categories/基础应用/"}],"tags":[{"name":"Tmux","slug":"Tmux","permalink":"https://zjlove0206.github.io/tags/Tmux/"},{"name":"Screen","slug":"Screen","permalink":"https://zjlove0206.github.io/tags/Screen/"},{"name":"终端","slug":"终端","permalink":"https://zjlove0206.github.io/tags/终端/"}]},{"title":"VIM配置实战","date":"2017-05-07T08:05:10.000Z","path":"2017/05/07/VIM配置实战/","text":"VIM 是一个功能强大、高度可定制的文本编辑器。是V命令的升级版。VIM学习指南 Vimplus vimplus的配置安装 link地址 VIM的管理插件&amp;优缺点VIM的管理插件 ：pathogen(windows)、vim-addon-manager、vundle(linux最常用)、vimana manager &amp; vimana 优缺点 VIMRC配置&quot; ＿＿＿ &quot; 彡 _／ ⌒ ⌒ 你说神马~ &quot; /)) (●) (●) ヽ &quot; ｜∩ (_人_) | &quot; / ノ､＿ヽノ＿ノ￣) &quot; / / /ﾌ_/ &quot; L＿／＼ ＼( &quot; &quot; 你很帅，贱贱 &quot; ===================== &quot; Source: vimplus &quot; Vimrc: 个性化定会vim编辑神器 &quot; Vundle: 插件管理工具 &quot; 其他插件：pathogen(windows)、vim-addon-manager、vimana &quot; Set: 设置必要的配置 比如：字符集、tab缩进 &quot; Plugin: 根据各自喜好和用法进行定制 &quot; ColorScheme: vim主题风格 &quot; PhpDoc: 主要还是服务于PHP &quot; 常用快捷键 &quot;----- F2 nerdtree &quot;----- F3 taglist &quot;----- F4 buffers管理 暂定 &quot;----- F5 刷新项目信息 php: (刷新tags cocspe等) &quot;----- F6 最近两个buffer切换 &quot;================ &quot;Set 基础设置 &quot; 包括基础配置的开启等(语法、文件) &quot;================ set nocompatible &quot;vim工作不需要考虑vi的兼容 nocp 简写 set nu &quot;打开文件显示行号 也可不显示 nonu set ruler &quot;在右下角显示光标的坐标 set hlsearch &quot;高亮显示搜索结果 set incsearch &quot;边输入边搜索(实时搜索) set showcmd &quot;在ruler左边显示当前正在输入的命令 set expandtab &quot;将tab键改为空格，默认是8个 set tabstop=4 &quot;将tab键改为4个空格 set shiftwidth=4 &quot;自动缩进时，使用4个空格，默认是8个 set cindent &quot;c/c++自动缩进 set mouse= &quot;设置鼠标滚轮非自然滚动 set fdm=indent &quot;代码折叠 set ic &quot;忽略大小写查找 set nofoldenable &quot;禁用vim折叠功能 set showmatch &quot;自动匹配括号 set backspace=indent,eol,start &quot;设置退格删除功能 map 9 $ &quot;通过9跳转到行末尾, 0默认跳转到行首 map &lt;silent&gt; &lt;C-A&gt; gg v G &quot;Ctrl-A 选中所有内容 syntax on &quot;自动语法高亮 enable 也可以，on可以覆盖当前对语法高亮的修改 filetype on &quot;启动文件类型检查 filetype plugin on &quot;运行vim加载文件类型插件 filetype indent on &quot;启动文件自动缩进 &quot;================= &quot;Plugin 插件引入 &quot; Vundle 插件管理 Plugin &amp; Bundle 均可 &quot; 引入管理文件目录 vim/bundle/插件/doc/插件.txt 为插件的具体用法 &quot;================ set rtp+=~/.vim/bundle/Vundle.vim call vundle#begin() Plugin &apos;VundleVim/Vundle.vim&apos; &quot;插件管理 Plugin &apos;chxuan/change-colorscheme&apos; &quot;颜色主题 F9 F10 切换主题 Plugin &apos;jiangmiao/auto-pairs&apos; &quot;括号补全 Plugin &apos;scrooloose/nerdcommenter&apos; &quot;快速注释 Plugin &apos;scrooloose/nerdtree&apos; &quot;树形目录树 Plugin &apos;Valloric/YouCompleteMe&apos; &quot;自动补全 Google工程师主研 neocomplete 这一款体验一般 日本货 Plugin &apos;godlygeek/tabular&apos; &quot;代码检测&amp;格式化&amp;对齐 ale 支持vim8.0 还有一个韩国牌子 Plugin &apos;ctrlpvim/ctrlp.vim&apos; &quot;快速查找文件 Plugin &apos;vim-airline/vim-airline&apos; &quot;装逼利器 各种导航线设置 负担会让vim略显卡顿 Plugin &apos;vim-airline/vim-airline-themes&apos; &quot;airline 主题 Plugin &apos;will133/vim-dirdiff&apos; &quot;文件差异比对 Plugin &apos;haya14busa/incsearch.vim&apos; &quot;极速跳转 据说是个日本卡哇伊搞得 sneak&amp;easymotion 都可以搞搞 Plugin &apos;mhinz/vim-startify&apos; &quot;显示最近使用的文件列表 Plugin &apos;Xuyuanp/nerdtree-git-plugin&apos; &quot;git 目录树更改 Plugin &apos;Yggdroot/indentLine&apos; &quot;代码缩进 Plugin &apos;tpope/vim-surround&apos; &quot;方便的在字符两边插入各种符号 xml Plugin &apos;tpope/vim-commentary&apos; &quot;注释代码行 gcc gc 注释 gcu gcgc 撤销注释 Plugin &apos;shawncplus/phpcomplete.vim&apos; &quot;php插件 Plugin &apos;vim-scripts/pdv-standalone&apos; &quot;PHP文档注释 Plugin &apos;vim-scripts/progressbar-widget&apos; &quot;Plugin &apos;L9&apos; &quot;VIM脚本库 &quot;Plugin &apos;tpope/vim-fugitive&apos; &quot;处理git merge 冲突 dv &quot;Plugin &apos;tpope/vim-repeat&apos; &quot;重复执行命令 &quot;Plugin &apos;tpope/vim-endwise&apos; &quot;自动结束某些结构 &quot;Plugin &apos;vim-scripts/a.vim&apos; &quot;头文件&amp;实现文件快速切换 &quot;Plugin &apos;vim-scripts/DoxygenToolkit.vim&apos; &quot;快速注释 &quot;Plugin &apos;vim-scripts/SQLComplete.vim&apos; &quot;SQL补全 &quot;html &amp; css &amp; js{} &quot;Plugin &apos;Valloric/MatchTagAlways&apos; &quot;自动匹配html标签，支持在标签间跳转 &quot;Plugin &apos;docunext/closetag.vim&apos; &quot;自动闭合HTML标签 &quot;Plugin &apos;gorodinskiy/vim-coloresque&apos; &quot;正则语法高亮 主要针对css\\sass\\less &quot;Plugin &apos;othree/yajs.vim&apos; &quot;js语法高亮 &quot;Plugin &apos;othree/javascript-libraries-syntax.vim&apos; &quot;Plugin &apos;rstacruz/sparkup&apos;, {&apos;rtp&apos;: &apos;vim/&apos;} &quot;tag tab 结构 &quot;Plugin &apos;vim-scripts/taglist.vim&apos; &quot;taglist 标记列表 代码结构概览 Plugin &apos;majutsushi/tagbar&apos; &quot;标签结构 call vundle#end() filetype plugin indent on &quot;=============== &quot;多窗口操作 mac Command &quot;=============== map + &lt;C-W&gt;+ &quot;+：扩大窗口 map - &lt;C-W&gt;- &quot;- : 缩小窗口 map &lt;C-l&gt; &lt;C-W&gt;l &quot;C-l 移动到右侧窗口 map &lt;C-h&gt; &lt;C-W&gt;h &quot;C-h 移动到左侧窗口 map &lt;C-j&gt; &lt;C-W&gt;j &quot;C-j 移动到下方窗口 map &lt;C-k&gt; &lt;C-W&gt;k &quot;C-k 移动到上方窗口 &quot;=============== &quot;不要交换文件和备份文件，减少冲突 &quot;=============== set noswapfile set nobackup set nowritebackup &quot;=============== &quot;改变主题 &amp; 打开关闭目录树 &amp; 设置默认主题 Jellybeans &quot;=============== map &lt;F10&gt; :NextColorScheme&lt;CR&gt; imap &lt;F10&gt; &lt;ESC&gt; :NextColorScheme&lt;CR&gt; map &lt;F9&gt; :PreviousColorScheme&lt;CR&gt; imap &lt;F9&gt; &lt;ESC&gt; :PreviousColorScheme&lt;CR&gt; map &lt;F2&gt; :NERDTreeToggle&lt;CR&gt; imap &lt;F2&gt; &lt;ESC&gt; :NERDTreeToggle&lt;CR&gt; &quot;autocmd vimenter * NERDTree &quot;是否自动打开目录树 set background=dark let g:solarized_termcolors=256 colorscheme jellybeans &quot;=============== &quot;taglist 配置信息 &quot;=============== nmap &lt;F3&gt; &lt;ESC&gt;:TagbarToggle&lt;RETURN&gt; set tags=tags set autochdir let g:tagbar_left = 0 let g:tagbar_width = 24 let g:tagbar_autoclose = 1 let g:tagbar_autofocus = 1 let g:tagbar_sort = 1 &quot;=============== &quot;代码缩进 标志线 默认为¦ Ctrl+i 控制显示 &quot;=============== let g:indentLine_char = &apos;¦&apos; &quot;let g:indentLine_color_term = 239 map &lt;C-i&gt; :IndentLinesToggle&lt;CR&gt; &quot;================ &quot;PHP定制内容以及php-doc 自动补全 ctrl+x ctrl+o &quot;================ autocmd FileType php noremap &lt;C-L&gt; :!php -l %&lt;CR&gt; &quot;语法检查 autocmd FileType php set omnifunc=phpcomplete#CompletePHP nnoremap &lt;C-K&gt; :call PhpDoc()&lt;CR&gt; vnoremap &lt;C-K&gt; :call PhpDocRange()&lt;CR&gt; let g:pdv_cfg_Uses = &apos;1&apos; let g:pdv_cfg_Package = &apos;package&apos; let g:pdv_cfg_Version = &apos;$Id$&apos; let g:pdv_cfg_Author = &apos;zhaojian &lt;zhaojian@moxiu.net&gt;&apos; let g:pdv_cfg_Copyright = &apos; 2012-2016 moxiu.com&apos; let g:pdv_cfg_License = &apos;魔秀科技(北京)有限公司 (https://moxiu.net/pm/projects/mx-dev/wiki/源代码管理规范)&apos; &quot; ctags &quot;set tags+=/usr/include/tags &quot;set tags+=~/.vim/systags &quot;set tags+=~/.vim/x86_64-linux-gnu-systags &quot;let g:ycm_collect_identifiers_from_tags_files = 1 &quot;let g:ycm_semantic_triggers = {} &quot;let g:ycm_semantic_triggers.c = [&apos;-&gt;&apos;, &apos;.&apos;, &apos; &apos;, &apos;(&apos;, &apos;[&apos;, &apos;&amp;&apos;,&apos;]&apos;] &quot; cpp_class_scope_highlight let g:cpp_class_scope_highlight = 1 let g:cpp_experimental_template_highlight = 1 let c_no_curly_error = 1 &quot;================ &quot;airline配置 切换不同的buffer缓冲区 &quot;================ set encoding=utf-8 let g:airline_theme=&quot;molokai&quot; let g:airline_powerline_fonts = 1 &quot;let g:airline#extensions#tabline#enabled = 1 if !exists(&apos;g:airline_symbols&apos;) let g:airline_symbols = {} endif let g:airline_left_sep = &apos;⮀&apos; let g:airline_left_alt_sep = &apos;⮁&apos; let g:airline_right_sep = &apos;⮂&apos; let g:airline_right_alt_sep = &apos;⮃&apos; let g:airline_symbols.branch = &apos;⭠&apos; let g:airline_symbols.readonly = &apos;⭤&apos; let g:airline_symbols.linenr = &apos;⭡&apos; &quot;let g:airline_symbols.spell = &apos;Ꞩ&apos; &quot;let g:airline_symbols.notexists = &apos;∄&apos; &quot;let g:airline_symbols.whitespace = &apos;Ξ&apos; nnoremap &lt;C-N&gt; :bn&lt;CR&gt; nnoremap &lt;C-P&gt; :bp&lt;CR&gt; nmap &lt;F6&gt; &lt;ESC&gt;:w&lt;RETURN&gt;:b#&lt;RETURN&gt; &quot; ctrlp let g:ctrlp_map = &apos;&lt;c-f&gt;&apos; let g:ctrlp_cmd = &apos;:CtrlP&apos; let g:ctrlp_working_path_mode = &apos;0&apos; set wildignore+=*/tmp/*,*.so,*.swp,*.zip &quot; MacOSX/Linux &quot; incsearch.vim map / &lt;Plug&gt;(incsearch-forward) map ? &lt;Plug&gt;(incsearch-backward) map g/ &lt;Plug&gt;(incsearch-stay) &quot;=============== &quot;简易的跨服务器复制粘贴 &quot;=============== vmap &lt;silent&gt; &lt;leader&gt;y &lt;ESC&gt;:&apos;&lt;,&apos;&gt;w! !curl --data-binary @- -X POST http://moxiu.net/clipboard.php&lt;RETURN&gt;&lt;RETURN&gt; nmap &lt;silent&gt; &lt;leader&gt;p &lt;ESC&gt;:r !curl -s http://moxiu.net/clipboard.php&lt;RETURN&gt; nmap &lt;M-K&gt; &lt;ESC&gt;:!php %:p&lt;CR&gt; set cursorline &quot;hi CursorLine cterm=NONE ctermbg=darkred ctermfg=white hi CursorLine cterm=NONE guibg=#006699 ctermfg=white hi CursorColumn cterm=NONE ctermbg=darkred ctermfg=white hi CursorLineNr cterm=NONE ctermfg=102 ctermbg=237 gui=NONE guifg=#878787 guibg=#3a3a3a &quot;YouCompleteMe 搞得鬼 插件目录下 运行 ./install.py 进行安装 &quot;let g:ycm_path_to_python_interpreter = &apos;/usr/bin/python2.7&apos; &quot;let g:ycm_server_use_vim_stdout = 1 &quot;let g:ycm_server_log_level = &apos;debug&apos;","categories":[{"name":"基础应用","slug":"基础应用","permalink":"https://zjlove0206.github.io/categories/基础应用/"}],"tags":[{"name":"Vim","slug":"Vim","permalink":"https://zjlove0206.github.io/tags/Vim/"},{"name":"编辑器","slug":"编辑器","permalink":"https://zjlove0206.github.io/tags/编辑器/"}]}]